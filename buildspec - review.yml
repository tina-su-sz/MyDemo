version: 0.2
env:
  secrets-manager:
    LOGIN: prod/sonar:sonartoken
    HOST: prod/sonar:HOST
    Organization: prod/sonar:Organization
    Project: prod/sonar:Project
phases:
  install:
    runtime-versions:
      dotnet: 3.1
  pre_build:
    commands:
      - apt-get update
      - apt-get install -y jq
      - dotnet restore AspNetCoreWebApplication/AspNetCoreWebApplication.csproj
      - dotnet restore AspNetCoreWebApplicationTest/AspNetCoreWebApplicationTest.csproj
      - dotnet tool install --global dotnet-sonarscanner
  build:
    commands:
      - dotnet sonarscanner begin /k:$Project /o:$Organization /d:sonar.login=$LOGIN /d:sonar.host.url=$HOST
      - dotnet build 
      - dotnet sonarscanner end /d:sonar.login=$LOGIN
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
  post_build:
    commands:

      # Do not remove this statement. This command is required for AWS CodeStar projects.
      # Update the AWS Partition, AWS Region, account ID and project ID in the project ARN in template-configuration.json file so AWS CloudFormation can tag project resources.
      #- sed -i.bak 's/\$PARTITION\$/'${PARTITION}'/g;s/\$AWS_REGION\$/'${AWS_REGION}'/g;s/\$ACCOUNT_ID\$/'${ACCOUNT_ID}'/g;s/\$PROJECT_ID\$/'${PROJECT_ID}'/g' template-configuration.json

